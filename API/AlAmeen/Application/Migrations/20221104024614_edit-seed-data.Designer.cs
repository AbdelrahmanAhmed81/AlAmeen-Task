// <auto-generated />
using System;
using Application.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221104024614_edit-seed-data")]
    partial class editseeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entites.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Code = "87fde15e-5f94-40be-bda9-2deb223631e1",
                            Email = "Abdelrahman@yahoo.com",
                            FirstName = "Abdelrahman",
                            IsActive = true,
                            LastName = "Ahmed",
                            Phone = "01555447488"
                        },
                        new
                        {
                            CustomerId = 2,
                            Code = "3e86dd78-5793-4af1-858c-dc73c0008020",
                            Email = "Mohammed@yahoo.com",
                            FirstName = "Mohammed",
                            IsActive = true,
                            LastName = "Saeed",
                            Phone = "01531157898"
                        });
                });

            modelBuilder.Entity("Domain.Entites.CustomerAddress", b =>
                {
                    b.Property<int>("CustomerAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerAddressId"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBillingAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShippingAddress")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerAddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddresses");

                    b.HasData(
                        new
                        {
                            CustomerAddressId = 1,
                            AddressLine1 = "45A Al Giza St",
                            AddressLine2 = "Giza Square",
                            City = "Giza",
                            Country = "Egypt",
                            CustomerId = 1,
                            IsBillingAddress = true,
                            IsShippingAddress = false,
                            PostalCode = "26566",
                            State = "Giza"
                        },
                        new
                        {
                            CustomerAddressId = 2,
                            AddressLine1 = "35B mohammed ismail St",
                            AddressLine2 = "Al Haram",
                            City = "Giza",
                            Country = "Egypt",
                            CustomerId = 1,
                            IsBillingAddress = false,
                            IsShippingAddress = true,
                            PostalCode = "54223",
                            State = "Giza"
                        },
                        new
                        {
                            CustomerAddressId = 3,
                            AddressLine1 = "5C mathaf al matrya",
                            AddressLine2 = "Ain Shams",
                            City = "Cairo",
                            Country = "Egypt",
                            CustomerId = 2,
                            IsBillingAddress = true,
                            IsShippingAddress = true,
                            PostalCode = "45722",
                            State = "Cairo"
                        });
                });

            modelBuilder.Entity("Domain.Entites.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            Date = new DateTime(2022, 11, 4, 4, 46, 13, 800, DateTimeKind.Local).AddTicks(3611),
                            Status = "Deliverd",
                            Subtotal = 40000m,
                            Tax = 5600m,
                            Total = 34400m
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            Date = new DateTime(2022, 11, 4, 4, 46, 13, 800, DateTimeKind.Local).AddTicks(3622),
                            Status = "Waiting",
                            Subtotal = 61500m,
                            Tax = 8610m,
                            Total = 52890m
                        });
                });

            modelBuilder.Entity("Domain.Entites.OrderBillingAddress", b =>
                {
                    b.Property<int>("OrderBillingAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderBillingAddressId"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderBillingAddressId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderBillingAddresses");

                    b.HasData(
                        new
                        {
                            OrderBillingAddressId = 1,
                            AddressLine1 = "45A Al Giza St",
                            AddressLine2 = "Giza Square",
                            City = "Giza",
                            Country = "Egypt",
                            OrderId = 1,
                            PostalCode = "26566",
                            State = "Giza"
                        },
                        new
                        {
                            OrderBillingAddressId = 2,
                            AddressLine1 = "35B mohammed ismail St",
                            AddressLine2 = "Al Haram",
                            City = "Giza",
                            Country = "Egypt",
                            OrderId = 2,
                            PostalCode = "54223",
                            State = "Giza"
                        });
                });

            modelBuilder.Entity("Domain.Entites.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = 1,
                            OrderId = 1,
                            Price = 5000m,
                            ProductId = 1,
                            Quantity = 5,
                            Tax = 3500m,
                            Total = 25000m
                        },
                        new
                        {
                            OrderDetailId = 2,
                            OrderId = 1,
                            Price = 7500m,
                            ProductId = 2,
                            Quantity = 2,
                            Tax = 2100m,
                            Total = 15000m
                        },
                        new
                        {
                            OrderDetailId = 3,
                            OrderId = 2,
                            Price = 6500m,
                            ProductId = 3,
                            Quantity = 6,
                            Tax = 5460m,
                            Total = 39000m
                        },
                        new
                        {
                            OrderDetailId = 4,
                            OrderId = 2,
                            Price = 7500m,
                            ProductId = 2,
                            Quantity = 3,
                            Tax = 3150m,
                            Total = 22500m
                        });
                });

            modelBuilder.Entity("Domain.Entites.OrderShippingAddress", b =>
                {
                    b.Property<int>("OrderShippingAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderShippingAddressId"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderShippingAddressId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderShippingAddresses");

                    b.HasData(
                        new
                        {
                            OrderShippingAddressId = 1,
                            AddressLine1 = "5C mathaf al matrya",
                            AddressLine2 = "Ain Shams",
                            City = "Cairo",
                            Country = "Egypt",
                            OrderId = 1,
                            PostalCode = "45722",
                            State = "Cairo"
                        },
                        new
                        {
                            OrderShippingAddressId = 2,
                            AddressLine1 = "35B mohammed ismail St",
                            AddressLine2 = "Al Haram",
                            City = "Giza",
                            Country = "Egypt",
                            OrderId = 2,
                            PostalCode = "54223",
                            State = "Giza"
                        });
                });

            modelBuilder.Entity("Domain.Entites.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Gaming Chair",
                            Name = "Chair",
                            Price = 5000m
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Modern desk",
                            Name = "Desk",
                            Price = 7500m
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Wooden Table",
                            Name = "Table",
                            Price = 6500m
                        });
                });

            modelBuilder.Entity("Domain.Entites.CustomerAddress", b =>
                {
                    b.HasOne("Domain.Entites.Customer", "Customer")
                        .WithMany("CustomerAddresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Entites.Order", b =>
                {
                    b.HasOne("Domain.Entites.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Entites.OrderBillingAddress", b =>
                {
                    b.HasOne("Domain.Entites.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entites.OrderDetail", b =>
                {
                    b.HasOne("Domain.Entites.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entites.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entites.OrderShippingAddress", b =>
                {
                    b.HasOne("Domain.Entites.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entites.Customer", b =>
                {
                    b.Navigation("CustomerAddresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entites.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
